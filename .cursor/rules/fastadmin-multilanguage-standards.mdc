# FastAdmin LDCMS多语言开发标准规范

> **支持中英日韩等多语言国际化功能的企业网站管理系统**
> **技术栈**: FastAdmin + LDCMS + ThinkPHP 5.1

---

## 🌐 多语言架构核心原理

### 语言管理基础
- **核心表**: `fa_ldcms_langs` - 所有语言配置的中枢
- **模板映射**: 每个语言对应一个独立的模板目录
- **自动切换**: 支持域名、路径、用户选择多种切换方式
- **SEO优化**: 每个语言版本独立的SEO配置

### 支持的语言代码标准
```php
// 标准语言代码
'zh-cn' => '简体中文',     // 中国大陆
'zh-tw' => '繁體中文',     // 台湾繁体
'en'    => 'English',    // 英语
'ja'    => '日本語',      // 日语
'ko'    => '한국어',      // 韩语
'vi-vn' => 'Tiếng Việt', // 越南语
'th'    => 'ไทย',        // 泰语
'es'    => 'Español',    // 西班牙语
'fr'    => 'Français',   // 法语
'de'    => 'Deutsch',    // 德语
'ru'    => 'Русский',    // 俄语
'ar'    => 'العربية',     // 阿拉伯语
```

---

## 🗄️ 数据库多语言设计

### fa_ldcms_langs表结构标准
```sql
CREATE TABLE `fa_ldcms_langs` (
  `id` int NOT NULL AUTO_INCREMENT,
  `code` varchar(20) NOT NULL COMMENT '语言代码',
  `title` varchar(50) NOT NULL COMMENT '语言名称',
  `template` varchar(100) NOT NULL COMMENT '模板目录名',
  `is_default` tinyint(1) DEFAULT 0 COMMENT '是否默认语言',
  `status` tinyint(1) DEFAULT 1 COMMENT '状态',
  `weigh` int DEFAULT 0 COMMENT '权重排序',
  PRIMARY KEY (`id`),
  UNIQUE KEY `code` (`code`)
);
```

### 多语言内容表设计原则
```sql
-- 栏目表多语言字段
ALTER TABLE fa_ldcms_category ADD COLUMN lang varchar(10) DEFAULT 'zh-cn';

-- 文档表多语言字段  
ALTER TABLE fa_ldcms_document ADD COLUMN lang varchar(10) DEFAULT 'zh-cn';

-- 站点信息表多语言配置
-- fa_ldcms_siteinfo 通过config字段存储JSON格式的多语言配置
```

---

## 🎨 模板多语言实现

### 模板目录结构
```
addons/ldcms/view/
├── biubiustar2025zh-cn/    # 简体中文模板
├── biubiustar2025zh-tw/    # 繁体中文模板
├── biubiustar2025en/       # 英文模板
├── biubiustar2025ja/       # 日文模板
├── biubiustar2025ko/       # 韩文模板
└── biubiustar2025vi-vn/    # 越南语模板
```

### 语言特定样式处理
```css
/* 字体适配 */
.lang-zh-cn, .lang-zh-tw {
    font-family: "Microsoft YaHei", "微软雅黑", "PingFang SC", sans-serif;
}

.lang-en {
    font-family: "Helvetica Neue", Arial, sans-serif;
}

.lang-ja {
    font-family: "Hiragino Sans", "ヒラギノ角ゴシック", "Yu Gothic", sans-serif;
}

.lang-ko {
    font-family: "Apple SD Gothic Neo", "Malgun Gothic", sans-serif;
}

.lang-vi-vn {
    font-family: "Times New Roman", serif;
}

/* 文字方向适配 */
.lang-ar {
    direction: rtl;
    text-align: right;
}

/* 字符间距适配 */
.lang-ja, .lang-ko {
    letter-spacing: 0.05em;
}
```

### 语言切换组件
```html
{ld:langs}
<div class="language-switcher">
    <div class="current-lang">
        <span class="lang-icon">{$current_lang_info.icon}</span>
        <span class="lang-text">{$current_lang_info.title}</span>
        <i class="fa fa-angle-down"></i>
    </div>
    <ul class="lang-dropdown">
        {volist name="langs" id="lang"}
        <li class="{if $lang.code == $current_lang}active{/if}">
            <a href="{$lang.url}" data-lang="{$lang.code}">
                <span class="lang-icon">{$lang.icon}</span>
                <span class="lang-text">{$lang.title}</span>
            </a>
        </li>
        {/volist}
    </ul>
</div>
{/ld:langs}
```

---

## 🔧 多语言开发最佳实践

### 1. 内容管理多语言化
```php
// 控制器中获取当前语言内容
public function getContent($id)
{
    $currentLang = ld_get_home_lang();
    
    $content = Document::where([
        'id' => $id,
        'lang' => $currentLang,
        'status' => 1
    ])->find();
    
    // 如果当前语言没有内容，回退到默认语言
    if (!$content) {
        $defaultLang = Langs::where('is_default', 1)->value('code');
        $content = Document::where([
            'id' => $id,
            'lang' => $defaultLang,
            'status' => 1
        ])->find();
    }
    
    return $content;
}
```

### 2. URL多语言化策略
```php
// 路径模式: /en/about-us, /zh-cn/about-us
'ldcms_detail' => [
    'pattern' => '/:lang/:category/:id',
    'route' => 'addons/ldcms/detail/index',
    'option' => [
        'lang' => '[a-z-]+',
        'category' => '[\w-]+',
        'id' => '\d+'
    ]
],

// 域名模式: en.example.com, cn.example.com
'ldcms_domain' => [
    'pattern' => '',
    'route' => 'addons/ldcms/index/index',
    'domain' => ':lang.example.com',
    'option' => [
        'lang' => '[a-z-]+'
    ]
],
```

### 3. SEO多语言优化
```html
<head>
    <!-- 基础SEO -->
    <title>{$seo_title|default=$content.title} - {$ld.sitetitle}</title>
    <meta name="description" content="{$seo_description|default=$content.description}">
    <meta name="keywords" content="{$seo_keywords}">
    
    <!-- 语言相关 -->
    <html lang="{$current_lang}">
    <meta http-equiv="Content-Language" content="{$current_lang}">
    
    <!-- hreflang标签 -->
    {ld:langs}
    <link rel="alternate" hreflang="{$lang.code}" href="{$lang.url}">
    {/ld:langs}
    
    <!-- 规范链接 -->
    <link rel="canonical" href="{$canonical_url}">
    
    <!-- 开放图谱 -->
    <meta property="og:locale" content="{$current_lang}">
    <meta property="og:type" content="website">
    <meta property="og:title" content="{$seo_title}">
    <meta property="og:description" content="{$seo_description}">
    <meta property="og:url" content="{$canonical_url}">
</head>
```

### 4. 表单多语言处理
```html
<!-- 留言表单多语言 -->
<form action="{:addon_url('ldcms/form/submit')}" method="post" class="contact-form">
    <input type="hidden" name="lang" value="{$current_lang}">
    <input type="hidden" name="form_id" value="{$form.id}">
    
    <div class="form-group">
        <label>{:lang('Name')}</label>
        <input type="text" name="name" placeholder="{:lang('Please enter your name')}" required>
    </div>
    
    <div class="form-group">
        <label>{:lang('Email')}</label>
        <input type="email" name="email" placeholder="{:lang('Please enter your email')}" required>
    </div>
    
    <div class="form-group">
        <label>{:lang('Message')}</label>
        <textarea name="message" placeholder="{:lang('Please enter your message')}" required></textarea>
    </div>
    
    <button type="submit">{:lang('Submit')}</button>
</form>
```

---

## 🛠️ 多语言工具函数

### 常用多语言函数
```php
// 获取当前语言
function ld_get_current_lang() {
    return ld_get_home_lang();
}

// 获取语言列表
function ld_get_lang_list($status = 1) {
    return Db::name('ldcms_langs')
        ->where('status', $status)
        ->order('weigh DESC, id ASC')
        ->select();
}

// 生成多语言URL
function ld_lang_url($lang, $url = null) {
    if (!$url) {
        $url = request()->url();
    }
    
    // 根据配置的URL模式生成对应语言的URL
    return addon_url('ldcms/index/index', ['lang' => $lang]);
}

// 获取语言对应的模板
function ld_get_lang_template($lang) {
    return Db::name('ldcms_langs')
        ->where('code', $lang)
        ->value('template');
}
```

### 模板中的多语言标签
```html
<!-- 语言切换链接 -->
{ld:langs}
{volist name="langs" id="lang"}
<a href="{:ld_lang_url($lang.code)}" 
   class="{if $lang.code == $current_lang}active{/if}"
   title="{$lang.title}">
    {$lang.title}
</a>
{/volist}
{/ld:langs}

<!-- 当前语言判断 -->
{if $current_lang == 'zh-cn'}
<div class="chinese-specific-content">
    <!-- 简体中文特定内容 -->
</div>
{elseif $current_lang == 'en'}
<div class="english-specific-content">
    <!-- 英文特定内容 -->
</div>
{/if}

<!-- 语言方向适配 -->
<div class="content-wrapper {if in_array($current_lang, ['ar', 'he'])}rtl{else}ltr{/if}">
    <!-- 内容 -->
</div>
```

---

## 📱 移动端多语言适配

### 响应式多语言菜单
```html
<div class="mobile-lang-switcher">
    <button class="lang-toggle" data-toggle="lang-menu">
        <span class="current-lang-flag">{$current_lang_info.flag}</span>
        <span class="current-lang-name">{$current_lang_info.short_name}</span>
        <i class="fa fa-chevron-down"></i>
    </button>
    
    <div class="lang-menu" id="lang-menu">
        {ld:langs}
        {volist name="langs" id="lang"}
        <a href="{$lang.url}" class="lang-option {if $lang.code == $current_lang}active{/if}">
            <span class="lang-flag">{$lang.flag}</span>
            <span class="lang-name">{$lang.title}</span>
        </a>
        {/volist}
        {/ld:langs}
    </div>
</div>
```

### 移动端字体适配
```css
/* 移动端多语言字体 */
@media (max-width: 768px) {
    .lang-zh-cn, .lang-zh-tw {
        font-size: 14px;
        line-height: 1.6;
    }
    
    .lang-en {
        font-size: 14px;
        line-height: 1.5;
    }
    
    .lang-ja, .lang-ko {
        font-size: 13px;
        line-height: 1.8;
    }
    
    .lang-ar {
        font-size: 15px;
        line-height: 1.7;
        text-align: right;
    }
}
```

---

## ⚡ 性能优化策略

### 多语言缓存策略
```php
// 语言配置缓存
Cache::remember('ldcms_langs_' . $lang, 3600, function() use ($lang) {
    return Db::name('ldcms_langs')
        ->where('code', $lang)
        ->find();
});

// 多语言内容缓存
Cache::remember("content_{$id}_{$lang}", 1800, function() use ($id, $lang) {
    return Document::where([
        'id' => $id,
        'lang' => $lang
    ])->find();
});
```

### 静态资源多语言优化
```html
<!-- 条件加载语言特定资源 -->
{if $current_lang == 'ar'}
<link rel="stylesheet" href="{ld:src src='css/rtl.css'}">
{/if}

{if in_array($current_lang, ['ja', 'ko'])}
<link rel="stylesheet" href="{ld:src src='css/cjk.css'}">
{/if}

<!-- 字体按需加载 -->
{switch name="current_lang"}
{case value="zh-cn"}
<link href="https://fonts.googleapis.com/css2?family=Noto+Sans+SC&display=swap" rel="stylesheet">
{/case}
{case value="ja"}
<link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP&display=swap" rel="stylesheet">
{/case}
{case value="ko"}
<link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR&display=swap" rel="stylesheet">
{/case}
{/switch}
```

---

## 🔍 多语言SEO最佳实践

### 搜索引擎优化
```html
<!-- sitemap多语言支持 -->
{ld:langs}
{volist name="langs" id="lang"}
<url>
    <loc>{:addon_url('ldcms/sitemap/index', ['lang' => $lang.code], true)}</loc>
    <lastmod>{:date('c')}</lastmod>
    <changefreq>weekly</changefreq>
    <priority>0.8</priority>
</url>
{/volist}
{/ld:langs}

<!-- 结构化数据多语言 -->
<script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "WebSite",
    "name": "{$ld.sitetitle}",
    "alternateName": {
        {ld:langs}
        "{$lang.code}": "{$lang.sitetitle}"
        {/ld:langs}
    },
    "url": "{:addon_url('ldcms/index/index', [], true)}",
    "inLanguage": [
        {ld:langs}
        "{$lang.code}"
        {/ld:langs}
    ]
}
</script>
```

---

## 📋 多语言开发检查清单

### 数据库配置检查
- [ ] fa_ldcms_langs表配置完整
- [ ] 所有语言代码符合标准格式
- [ ] 默认语言正确设置
- [ ] 模板字段指向正确目录
- [ ] 权重排序合理设置

### 模板开发检查
- [ ] 每个语言对应独立模板目录
- [ ] 语言特定CSS样式适配
- [ ] 字体选择符合语言特色
- [ ] RTL语言支持（如阿拉伯语）
- [ ] 移动端多语言适配

### SEO优化检查
- [ ] hreflang标签正确设置
- [ ] 每个语言版本独立URL
- [ ] sitemap包含所有语言版本
- [ ] 结构化数据多语言支持
- [ ] 元标签多语言优化

### 功能测试检查
- [ ] 语言切换功能正常
- [ ] 内容按语言正确显示
- [ ] 表单多语言提交
- [ ] 搜索功能多语言支持
- [ ] 404页面多语言适配

---

**注意**: 本规范适用于FastAdmin LDCMS v1.2+版本的多语言功能开发。
